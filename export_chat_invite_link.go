package telegram

import "net/http"

// ExportChatInviteLinkRequest represents a request to generate a new primary invite link for a chat using the exportChatInviteLink method through the Telegram bot API.
//
// Required fields:
//   - ChatID
//
// See https://core.telegram.org/bots/api#exportchatinvitelink
type ExportChatInviteLinkRequest struct {
	// (Required) Integer or string. Unique identifier for the target chat or username of the target channel (in the format @channelusername)
	ChatID any `json:"chat_id"`
}

// ExportChatInviteLink generates a new primary invite link for a chat through the Telegram bot API.
//
// Any previously generated primary link is revoked. The bot must be an administrator in the chat
// for this to work and must have the appropriate administrator rights.
//
// Parameters:
//   - chatID: Integer or string. Unique identifier for the target chat or username of the target channel (in the format @channelusername)
//
// Returns the new invite link as a string on success.
//
// # Note
//
// Each administrator in a chat generates their own invite links. Bots can't use invite links generated by other administrators. If you want your bot to work with invite links, it will need to generate its own link using exportChatInviteLink or by calling the getChat method. If your bot needs to generate a new primary invite link replacing its previous one, use exportChatInviteLink again.
//
// See https://core.telegram.org/bots/api#exportchatinvitelink
func (b *Bot) ExportChatInviteLink(chatID any) (string, error) {
	request := ExportChatInviteLinkRequest{
		ChatID: chatID,
	}
	result := new(string)
	if err := b.sendJsonForResult(result, http.MethodPost, MethodExportChatInviteLink, request); err != nil {
		return "", err
	}
	return *result, nil
}
