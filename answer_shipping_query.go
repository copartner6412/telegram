package telegram

import (
	"net/http"
)

// AnswerShippingQueryRequest is used to respond to a shipping query if a shipping address was requested and
// the "is_flexible" parameter was specified. The bot can indicate whether delivery to the specified address is possible
// or not, and if so, provide available shipping options.
//
// Required fields:
//   - ShippingQueryID
//   - Ok
//
// See "answerShippingQuery" https://core.telegram.org/bots/api#answershippingquery
type AnswerShippingQueryRequest struct {
	// (Required) Unique identifier for the query to be answered.
	ShippingQueryID string `json:"shipping_query_id"`

	// (Required) Pass True if delivery to the specified address is possible and False if there are any problems.
	// For example, False if delivery to the specified address is not possible.
	Ok bool `json:"ok"`

	// (Optional) Required if ok is True. An array of available shipping options.
	ShippingOptions []ShippingOption `json:"shipping_options,omitempty"`

	// (Optional) Required if ok is False. Error message in human-readable form that explains why it is impossible
	// to complete the order, e.g., "Sorry, delivery to your desired address is unavailable."
	// This message will be displayed to the user by Telegram.
	ErrorMessage string `json:"error_message,omitempty"`
}

// AnswerShippingQueryOK responds ok to a shipping query generated by an invoice request with a flexible shipping address through the Telegram bot API.
//
// Required parameters:
//   - shippingQueryID: Unique identifier for the query to be answered
//   - shippingOptions: An array of available shipping options.
//
// See "answerShippingQuery" https://core.telegram.org/bots/api#answershippingquery
func (b *Bot) AnswerShippingQueryOK(shippingQueryID string, shippingOptions []ShippingOption) error {
	request := AnswerShippingQueryRequest{
		ShippingQueryID: shippingQueryID,
		Ok:              true,
		ShippingOptions: shippingOptions,
	}
	if err := b.sendJsonForBool(http.MethodPost, MethodAnswerShippingQuery, request); err != nil {
		return err
	}
	return nil
}

// AnswerShippingQueryNotOK responds not ok to a shipping query generated by an invoice request with a flexible shipping address through the Telegram bot API.
//
// Required parameters:
//   - shippingQueryID: Unique identifier for the query to be answered
//   - errorMessage: Error message in human readable form that explains why it is impossible to complete the order (e.g. "Sorry, delivery to your desired address is unavailable'). Telegram will display this message to the user.
//
// See "answerShippingQuery" https://core.telegram.org/bots/api#answershippingquery
func (b *Bot) AnswerShippingQueryNotOK(shippingQueryID, errorMessage string) error {
	request := AnswerShippingQueryRequest{
		ShippingQueryID: shippingQueryID,
		Ok:              false,
		ErrorMessage:    errorMessage,
	}
	if err := b.sendJsonForBool(http.MethodPost, MethodAnswerShippingQuery, request); err != nil {
		return err
	}
	return nil
}
